<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="salary">
    <insert id="add" parameterType="salary" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO exam.salary (
    month, 
    basic, 
    allowance, 
    reward, 
    insurance, 
    gongJiJin, 
    money, 
    userId
        )
        VALUES (
    #{month}, 
    #{basic}, 
    #{allowance}, 
    #{reward}, 
    #{insurance}, 
    #{gongJiJin}, 
    #{money}, 
    #{userId}
        );
    </insert>
    <delete id="remove">
        DELETE FROM exam.salary
        WHERE salary.id = #{id}
    </delete>
    <update id="modify">
        UPDATE exam.salary
        SET
    month = #{month}, 
    basic = #{basic}, 
    allowance = #{allowance}, 
    reward = #{reward}, 
    insurance = #{insurance}, 
    gongJiJin = #{gongJiJin}, 
    money = #{money}, 
    userId = #{userId}
        WHERE salary.id = #{id}
    </update>
    <select id="list" resultType="salary">
        SELECT *
        FROM exam.salary
        ORDER BY id
    </select>
    <select id="query" parameterType="salary" resultType="salary">
        SELECT *
        FROM exam.salary
        <where>
            <if test="id != null and id != ''">
            salary.id = #{id}
            </if>
            <if test="month != null and month != ''"> AND month LIKE "%"#{month}"%"</if>
            <if test="basic != null and basic != ''"> AND basic LIKE "%"#{basic}"%"</if>
            <if test="allowance != null and allowance != ''"> AND allowance LIKE "%"#{allowance}"%"</if>
            <if test="reward != null and reward != ''"> AND reward LIKE "%"#{reward}"%"</if>
            <if test="insurance != null and insurance != ''"> AND insurance LIKE "%"#{insurance}"%"</if>
            <if test="gongJiJin != null and gongJiJin != ''"> AND gongJiJin LIKE "%"#{gongJiJin}"%"</if>
            <if test="money != null and money != ''"> AND money LIKE "%"#{money}"%"</if>
            <if test="userId != null and userId != ''"> AND userId LIKE "%"#{userId}"%"</if>
        </where>
    </select>
    <select id="search" resultType="salary">
        SELECT *
        FROM exam.salary
        WHERE salary.id = #{id}
    </select>
    <!--<resultMap id="map_queryUserSalaries" type="user">
        <id property="id" column="id"/>
        <result property="username" column="username"/>
        <collection property="salaries" ofType="salary">
            <result property="month" column="month"/>
            <result property="basic" column="basic"/>
            <result property="allowance" column="allowance"/>
            <result property="reward" column="reward"/>
            <result property="insurance" column="insurance"/>
            <result property="gongJiJin" column="gongJiJin"/>
        </collection>
    </resultMap>-->
    <resultMap id="map_queryUserSalaries" type="salary">
        <id property="id" column="id"/>
        <result property="month" column="month"/>
        <result property="basic" column="basic"/>
        <result property="allowance" column="allowance"/>
        <result property="reward" column="reward"/>
        <result property="insurance" column="insurance"/>
        <result property="gongJiJin" column="gongJiJin"/>
        <association property="user" javaType="user">
            <result property="username" column="username"/>
        </association>
    </resultMap>
    <select id="queryUserSalaries" resultMap="map_queryUserSalaries">
        SELECT
        u.username,
        s.id,
        s.month,
        s.basic,
        s.allowance,
        s.reward,
        s.insurance,
        s.gongJiJin
        FROM exam.user u INNER JOIN exam.salary s ON u.id = s.userId
    </select>
    <select id="queryUserSalariesByUserId" parameterType="int" resultMap="map_queryUserSalaries">
        SELECT
        u.username,
        s.id,
        s.month,
        s.basic,
        s.allowance,
        s.reward,
        s.insurance,
        s.gongJiJin
        FROM exam.user u INNER JOIN exam.salary s ON u.id = s.userId
        WHERE u.id = #{id}
    </select>
    <select id="queryUserSalariesByUsernameOrTime" parameterType="hashmap" resultMap="map_queryUserSalaries">
        SELECT
        u.username,
        s.id,
        s.month,
        s.basic,
        s.allowance,
        s.reward,
        s.insurance,
        s.gongJiJin
        FROM exam.user u INNER JOIN exam.salary s ON u.id = s.userId
        # MyBatis Dynamic SQL
        <where>
            <if test="username != null">
                u.username = #{username}
            </if>
            <if test="month != null">
                AND s.month = #{month}
            </if>
        </where>
    </select>
</mapper>